/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Relogio;

import Util.UtilFormatador;
import Util.UtilTransparente;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Analise em Curso
 */
public class RelogioDigital extends javax.swing.JFrame {

    UtilFormatador utilFormatador = new UtilFormatador();

    /**
     * Creates new form NewJFrame
     */
    public RelogioDigital() {
//        UtilTransparente t = new UtilTransparente();
//        t.aplicaTransparencia(this);
        this.setUndecorated(true);
        this.setBackground(new Color(0, 0, 0, 0));
        //titulo do formulario
        this.setTitle("Relogio");
        
        initComponents();
        try {
//            rSProgressCircleHora.setString(utilFormatador.retornarHora(new java.util.Date(System.currentTimeMillis())));
//            rSProgressCircleHora.setValue(Integer.parseInt(utilFormatador.retornarHora(new java.util.Date(System.currentTimeMillis()))));
//            rSProgressCircleMinutos.setString(utilFormatador.retornarMinutos(new java.util.Date(System.currentTimeMillis())));
//            rSProgressCircleMinutos.setValue(Integer.parseInt(utilFormatador.retornarMinutos(new java.util.Date(System.currentTimeMillis()))));
//            rSProgressCircleSegundos.setString(utilFormatador.retornarSegundos(new java.util.Date(System.currentTimeMillis())));
//            rSProgressCircleSegundos.setValue(Integer.parseInt(utilFormatador.retornarSegundos(new java.util.Date(System.currentTimeMillis()))));

        } catch (Exception ex) {
            Logger.getLogger(RelogioDigital.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlblMover = new javax.swing.JLabel();
        jlblSair = new javax.swing.JLabel();
        rSProgressCircleSegundos = new rojerusan.componentes.RSProgressCircle();
        rSProgressCircleMinutos = new rojerusan.componentes.RSProgressCircle();
        rSProgressCircleHora = new rojerusan.componentes.RSProgressCircle();
        lblHora = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jlblMover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/move.png"))); // NOI18N
        jlblMover.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jlblMover.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jlblMoverMouseDragged(evt);
            }
        });
        jlblMover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblMoverMouseClicked(evt);
            }
        });
        jPanel1.add(jlblMover);
        jlblMover.setBounds(0, 0, 32, 30);

        jlblSair.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlblSair.setForeground(new java.awt.Color(255, 51, 51));
        jlblSair.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblSair.setText("X");
        jlblSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlblSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlblSairMouseClicked(evt);
            }
        });
        jPanel1.add(jlblSair);
        jlblSair.setBounds(0, 30, 30, 20);

        rSProgressCircleSegundos.setBackground(new java.awt.Color(255, 255, 51));
        rSProgressCircleSegundos.setForeground(new java.awt.Color(255, 0, 0));
        rSProgressCircleSegundos.setMaximum(60);
        rSProgressCircleSegundos.setValue(1);
        rSProgressCircleSegundos.setAutoscrolls(true);
        rSProgressCircleSegundos.setColorText(new java.awt.Color(0, 153, 51));
        rSProgressCircleSegundos.setString("1");
        rSProgressCircleSegundos.setStringPainted(false);
        jPanel1.add(rSProgressCircleSegundos);
        rSProgressCircleSegundos.setBounds(55, 50, 150, 150);

        rSProgressCircleMinutos.setBackground(new java.awt.Color(0, 51, 255));
        rSProgressCircleMinutos.setForeground(new java.awt.Color(0, 51, 255));
        rSProgressCircleMinutos.setMaximum(60);
        rSProgressCircleMinutos.setValue(1);
        rSProgressCircleMinutos.setAutoscrolls(true);
        rSProgressCircleMinutos.setColorText(new java.awt.Color(0, 153, 51));
        rSProgressCircleMinutos.setString("1");
        rSProgressCircleMinutos.setStringPainted(false);
        jPanel1.add(rSProgressCircleMinutos);
        rSProgressCircleMinutos.setBounds(30, 25, 200, 200);

        rSProgressCircleHora.setBackground(new java.awt.Color(0, 0, 0));
        rSProgressCircleHora.setForeground(new java.awt.Color(0, 204, 0));
        rSProgressCircleHora.setMaximum(12);
        rSProgressCircleHora.setValue(1);
        rSProgressCircleHora.setAlignmentX(0.0F);
        rSProgressCircleHora.setAlignmentY(0.0F);
        rSProgressCircleHora.setColorText(new java.awt.Color(0, 153, 51));
        rSProgressCircleHora.setFont(new java.awt.Font("Tahoma", 1, 24));
        rSProgressCircleHora.setString("1");
        rSProgressCircleHora.setStringPainted(false);
        jPanel1.add(rSProgressCircleHora);
        rSProgressCircleHora.setBounds(0, 0, 260, 250);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 250));

        lblHora.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblHora.setForeground(new java.awt.Color(0, 153, 0));
        lblHora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHora.setText("00:00:00");
        getContentPane().add(lblHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 80, 20));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Timer timer = new Timer(1000, new hora());
        timer.start();
    }//GEN-LAST:event_formWindowOpened

    private void jlblSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblSairMouseClicked
        // sair
        System.exit(0);
    }//GEN-LAST:event_jlblSairMouseClicked
   int xx, xy;
    private void jlblMoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblMoverMouseClicked
        xx = 0;
        xy = 0;
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jlblMoverMouseClicked

    private void jlblMoverMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlblMoverMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jlblMoverMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelogioDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelogioDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelogioDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelogioDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelogioDigital().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlblMover;
    private javax.swing.JLabel jlblSair;
    private javax.swing.JLabel lblHora;
    private rojerusan.componentes.RSProgressCircle rSProgressCircleHora;
    private rojerusan.componentes.RSProgressCircle rSProgressCircleMinutos;
    private rojerusan.componentes.RSProgressCircle rSProgressCircleSegundos;
    // End of variables declaration//GEN-END:variables
//implementar a classe hora
    class hora implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            Calendar now = Calendar.getInstance();
//            lblHora.setText(String.format("%1$th:%1$tM:%1$tS", now));
            lblHora.setText("<html>"
                    + "<span style=\"color:Green\">" + utilFormatador.retornarHora(new java.util.Date(System.currentTimeMillis())) + "</span>:"
                    + "<span style=\"color: blue\">" + utilFormatador.retornarMinutos(new java.util.Date(System.currentTimeMillis())) + "</span>:"
                    + "<span style=\"color: red\">" + utilFormatador.retornarSegundos(new java.util.Date(System.currentTimeMillis())) + "</span>"
                    + "</html>"
            );
            try {
                // rSProgressCircleHora.setString(utilFormatador.retornarHora(new java.util.Date(System.currentTimeMillis())));
                rSProgressCircleHora.setValue(Integer.parseInt(utilFormatador.retornarHora(new java.util.Date(System.currentTimeMillis()))));
                //rSProgressCircleMinutos.setString(utilFormatador.retornarMinutos(new java.util.Date(System.currentTimeMillis())));
                rSProgressCircleMinutos.setValue(Integer.parseInt(utilFormatador.retornarMinutos(new java.util.Date(System.currentTimeMillis()))));
                // rSProgressCircleSegundos.setString(utilFormatador.retornarSegundos(new java.util.Date(System.currentTimeMillis())));
                rSProgressCircleSegundos.setValue(Integer.parseInt(utilFormatador.retornarSegundos(new java.util.Date(System.currentTimeMillis()))));

            } catch (NumberFormatException ex) {
                Logger.getLogger(RelogioDigital.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
